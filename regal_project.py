# -*- coding: utf-8 -*-
"""Regal_Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NBy6t9n4NcO4kPTR6-ed0RX4Z1T4raSG
"""

#Libraries
from fastai.basics import *
from fastai.vision.all import *
from fastai.callback.all import *
import base64
import pandas as pd
import os
import PIL
from pathlib import Path
import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.gridspec as gs
#from pathlib import Path
from numpy import *
import torch
print(torch.cuda.is_available())

path = Path("/content/drive/MyDrive/Regals")
dir_list = [x for x in path.iterdir() if x.is_dir()]
print(dir_list)
path.ls()

np.random.seed(57)

Regal = DataBlock(blocks=(ImageBlock, CategoryBlock),
                  get_items=get_image_files,
                  splitter=RandomSplitter(0.2),
                  get_y=parent_label,
                  item_tfms= Resize(300, 'squish'),
                  batch_tfms=[*aug_transforms(size=224, max_warp=0), Normalize.from_stats(*imagenet_stats)])

#set batch size
dls = Regal.dataloaders(path, bs = 10)

dls.show_batch(max_n = 10)

#Checking the class label names
dls.vocab.o2i

#Generate the Learner 
learn = cnn_learner(dls, resnet101, pretrained = True, metrics = accuracy).to_fp16()

#Initial Training (burn in)
learn.fit_one_cycle(3)

#Initial Training (burn in)
learn.fit_one_cycle(3)

#Initial Training (burn in)
learn.fit_one_cycle(3)

#learn.unfreeze()
learn.unfreeze()

# Trained on all layers
learn.fit_one_cycle(3)

learn.fit_one_cycle(3)

#With Transforms
learn.fit_one_cycle(3)

learn.fit_one_cycle(3)

learn.fit_one_cycle(8, lr_max=slice(1e-6, 1e-4))

#learn.save('example_cws_1')
#learn.load('example_cws_1')
learn.save('Regal_Project_1')
learn.load('Regal_Project_1')

interp = ClassificationInterpretation.from_learner(learn)
losses,idxs = interp.top_losses()

len(dls.valid_ds)==len(losses)==len(idxs)

learn.lr_find()

interp.plot_top_losses(10, figsize=(15,10), largest=True)

interp.plot_confusion_matrix(figsize=(5,5), dpi=160)

interp.most_confused(min_val=3)

learn.export('Regal_Project_1.pkl')